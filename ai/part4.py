import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error

# 1. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
X = np.linspace(-20, 20, 400).reshape(-1, 1)
y = np.sin(X).flatten() + 0.1 * X.flatten()**2

# 2. –ù–∞–≤—á–∞–Ω–Ω—è –º–æ–¥–µ–ª—ñ
model = LinearRegression()
model.fit(X, y)

# 3. –ü—Ä–æ–≥–Ω–æ–∑
y_pred = model.predict(X)

# 4. –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è
plt.figure(figsize=(10, 6))
plt.plot(X, y, label='–†–µ–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è: sin(x) + 0.1 * x¬≤', color='blue')
plt.plot(X, y_pred, label='–ú–æ–¥–µ–ª—å –ª—ñ–Ω—ñ–π–Ω–æ—ó —Ä–µ–≥—Ä–µ—Å—ñ—ó', color='red', linestyle='--')
plt.xlabel("x")
plt.ylabel("f(x)")
plt.title("–ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó f(x) = sin(x) + 0.1 * x¬≤")
plt.legend()
plt.grid(True)
plt.show()

# 5. –ú–µ—Ç—Ä–∏–∫–∏ —è–∫–æ—Å—Ç—ñ
mae = mean_absolute_error(y, y_pred)
mse = mean_squared_error(y, y_pred)

print(f"üìè MAE (—Å–µ—Ä–µ–¥–Ω—è –∞–±—Å–æ–ª—é—Ç–Ω–∞ –ø–æ–º–∏–ª–∫–∞): {mae:.4f}")
print(f"üìê MSE (—Å–µ—Ä–µ–¥–Ω—è –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞): {mse:.4f}")
